name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.21'
  NODE_VERSION: '18'

permissions:
  contents: write
  discussions: write

jobs:
  release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux/amd64
            asset_name: soxyCheckerGui-linux-amd64.tar.gz
          - os: windows-latest
            platform: windows/amd64
            asset_name: soxyCheckerGui-windows-amd64.zip
          - os: macos-latest
            platform: darwin/amd64
            asset_name: soxyCheckerGui-darwin-amd64.tar.gz
          - os: macos-latest
            platform: darwin/arm64
            asset_name: soxyCheckerGui-darwin-arm64.tar.gz

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          pkg-config \
          libgtk-3-dev \
          libwebkit2gtk-4.1-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev

    - name: Create WebKit compatibility symlinks
      if: matrix.os == 'ubuntu-latest'
      run: |
        if pkg-config --exists webkit2gtk-4.1; then
          sudo ln -sf /usr/lib/x86_64-linux-gnu/pkgconfig/webkit2gtk-4.1.pc /usr/lib/x86_64-linux-gnu/pkgconfig/webkit2gtk-4.0.pc
          sudo ln -sf /usr/lib/x86_64-linux-gnu/libwebkit2gtk-4.1.so /usr/lib/x86_64-linux-gnu/libwebkit2gtk-4.0.so || true
          sudo ln -sf /usr/lib/x86_64-linux-gnu/libjavascriptcoregtk-4.1.so /usr/lib/x86_64-linux-gnu/libjavascriptcoregtk-4.0.so || true
        fi

    - name: Install Wails
      run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

    - name: Install dependencies
      run: |
        go mod download
        if [ -d "frontend" ]; then
          cd frontend
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi
        fi
      shell: bash

    - name: Build frontend
      run: |
        if [ -d "frontend" ]; then
          cd frontend
          npm run build
        else
          mkdir -p frontend/dist
          echo '<!DOCTYPE html><html><head><title>SoxyChecker</title></head><body><div id="root">Loading...</div></body></html>' > frontend/dist/index.html
        fi
      shell: bash

    - name: Build application
      run: wails build -platform ${{ matrix.platform }} -clean -s -trimpath
      shell: bash

    - name: Prepare macOS app for distribution
      if: matrix.os == 'macos-latest'
      run: |
        cd build/bin
        xattr -cr soxyCheckerGui.app || true
        chmod +x soxyCheckerGui.app/Contents/MacOS/* || true
      shell: bash

    - name: Package Linux/macOS
      if: matrix.os != 'windows-latest'
      run: |
        cd build/bin
        if [[ "${{ matrix.platform }}" == darwin/* ]]; then
          /usr/bin/tar -czf ${{ matrix.asset_name }} soxyCheckerGui.app
        else
          tar -czf ${{ matrix.asset_name }} soxyCheckerGui
        fi
      shell: bash

    - name: Package Windows
      if: matrix.os == 'windows-latest'
      run: |
        cd build/bin
        7z a ${{ matrix.asset_name }} soxyCheckerGui.exe
      shell: bash

    - name: Extract tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Generate changelog
      id: changelog
      run: |
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        CURRENT_TAG="${{ steps.tag.outputs.tag }}"
        
        echo "## What's Changed in $CURRENT_TAG" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        
        if [ -n "$PREV_TAG" ]; then
          echo "**Full Changelog**: [$PREV_TAG...$CURRENT_TAG](https://github.com/${{ github.repository }}/compare/$PREV_TAG...$CURRENT_TAG)" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### Commits:" >> CHANGELOG.md
          git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD >> CHANGELOG.md || echo "- No commits found" >> CHANGELOG.md
        else
          echo "### Features:" >> CHANGELOG.md
          echo "- Initial release of SoxyChecker GUI" >> CHANGELOG.md
          echo "- Proxy checking functionality for HTTP, HTTPS, SOCKS4, and SOCKS5" >> CHANGELOG.md
          echo "- Cross-platform support (Windows, macOS, Linux)" >> CHANGELOG.md
          echo "- Modern GUI built with Wails and React" >> CHANGELOG.md
        fi
      shell: bash

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: SoxyChecker GUI ${{ steps.tag.outputs.tag }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: ${{ contains(steps.tag.outputs.tag, 'alpha') || contains(steps.tag.outputs.tag, 'beta') || contains(steps.tag.outputs.tag, 'rc') }}
        files: |
          build/bin/${{ matrix.asset_name }}
        generate_release_notes: true
        fail_on_unmatched_files: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}